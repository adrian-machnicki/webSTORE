-- TABLE users
CREATE TABLE users (
	id						INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,
	username				VARCHAR(50) NOT NULL UNIQUE,
	password				VARCHAR(70) NOT NULL,
	email					VARCHAR(50) NOT NULL UNIQUE,
	user_details_id			INTEGER,
	enabled					TINYINT NOT NULL
);
CREATE INDEX users_username ON users (username);


-- TABLE authorities
CREATE TABLE authorities (
	id						INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,
	username				VARCHAR(50) NOT NULL,
	authority				VARCHAR(50) NOT NULL,
	
	UNIQUE (username, authority)
);
CREATE INDEX authorities_username ON authorities (username);

-- TABLE user_details
CREATE TABLE user_details (

	id						INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,
	city					VARCHAR(50)
);
CREATE INDEX user_details_id ON user_details (id);


-- TABLE books
CREATE TABLE books (
	id						INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,
	title					VARCHAR(120),
	book_details_id 		INTEGER,
	price					FLOAT,
	amount					INTEGER
);
CREATE INDEX books_title ON books (title);


-- TABLE authors
CREATE TABLE authors (
	id						INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,
	first_name				VARCHAR(30),
	last_name  				VARCHAR_IGNORECASE(30)
);
CREATE INDEX authors_last_name ON authors (last_name);


-- TABLE books_authors <MANY TO MANY>
CREATE TABLE books_authors (
	book_id					INTEGER,
	author_id 				INTEGER
);


-- TABLE book_details
CREATE TABLE book_details (
	id						INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,
	pages					INTEGER,
	description				VARCHAR(231)
);


-- TABLE orders
CREATE TABLE orders (
	id						INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,
	amount					FLOAT
);
CREATE INDEX orders_id ON orders (id);


-- TABLE order_records
CREATE TABLE order_records (
	id						INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,
	quantity				INTEGER,
	price					FLOAT,
	amount					INTEGER,
	book_id					INTEGER,
	order_id				INTEGER
);
CREATE INDEX order_records_order_id ON order_records (order_id);


-- ADD CONSTRAINTS

ALTER TABLE users
	ADD CONSTRAINT fk_users_user_details_id
	FOREIGN KEY(user_details_id)
	REFERENCES user_details(id);	

ALTER TABLE authorities
	ADD CONSTRAINT fk_authorities_username
	FOREIGN KEY(username)
	REFERENCES users(username);	

ALTER TABLE books
	ADD CONSTRAINT fk_books_book_details_id
	FOREIGN KEY(book_details_id)
	REFERENCES book_details(id);

ALTER TABLE books_authors
	ADD CONSTRAINT fk_books_authors_book_id
	FOREIGN KEY(book_id)
	REFERENCES books(id);
	
ALTER TABLE books_authors
	ADD CONSTRAINT fk_books_authors_author_id
	FOREIGN KEY(author_id)
	REFERENCES authors(id);
	
ALTER TABLE order_records
	ADD CONSTRAINT fk_order_records_book_id
	FOREIGN KEY(book_id)
	REFERENCES books(id);
	
ALTER TABLE order_records
	ADD CONSTRAINT fk_order_records_order_id
	FOREIGN KEY(order_id)
	REFERENCES orders(id);	
	
	
	
	